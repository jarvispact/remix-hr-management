generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model country {
  id           String      @id @default(uuid())
  country_code String?     @db.VarChar(255)
  country_name String?     @db.VarChar(255)
  locations    location[]
}

model department {
  id              String      @id @default(uuid())
  department_name String      @db.VarChar(255)
  location_id     String?
  locations       location?   @relation(fields: [location_id], references: [id], onDelete: Cascade)
  employees       employee[]
}

model dependent {
  id           String    @id @default(uuid())
  first_name   String    @db.VarChar(255)
  last_name    String    @db.VarChar(255)
  relationship String    @db.VarChar(255)
  employee_id  String
  employees    employee  @relation(fields: [employee_id], references: [id], onDelete: Cascade)
}

model employee {
  id              String       @id @default(uuid())
  first_name      String?      @db.VarChar(255)
  last_name       String       @db.VarChar(255)
  email           String       @db.VarChar(255)
  phone_number    String?      @db.VarChar(255)
  hire_date       DateTime     @db.Date
  job_id          String
  salary          Float        @db.DoublePrecision
  manager_id      String?
  department_id   String?
  departments     department?  @relation(fields: [department_id], references: [id], onDelete: Cascade)
  jobs            job          @relation(fields: [job_id], references: [id], onDelete: Cascade)
  employees       employee?    @relation("employeesToemployees_manager_id", fields: [manager_id], references: [id], onDelete: Cascade)
  dependents      dependent[]
  other_employees employee[]   @relation("employeesToemployees_manager_id")
}

model job {
  id         String      @id @default(uuid())
  job_title  String      @db.VarChar(255)
  min_salary Float?      @db.DoublePrecision
  max_salary Float?      @db.DoublePrecision
  employees  employee[]
}

model location {
  id             String        @id @default(uuid())
  street_address String?       @db.VarChar(255)
  postal_code    String?       @db.VarChar(255)
  city           String        @db.VarChar(255)
  state_province String?       @db.VarChar(255)
  country_id     String        @db.VarChar(255)
  countries      country       @relation(fields: [country_id], references: [id], onDelete: Cascade)
  departments    department[]
}
